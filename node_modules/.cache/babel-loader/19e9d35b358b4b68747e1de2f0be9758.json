{"ast":null,"code":"var _jsxFileName = \"/Users/Regan/Downloads/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n// TODO: import useFormik from formik library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [success, setSuccess] = React.setState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: \" \",\n      password: \" \"\n    },\n    onSubmit: values => {\n      console.log(\"form:\", values);\n      if (formik.errors.email === \" \" && formik.errors.password === \" \") {\n        setSuccess(true);\n      }\n      if (success) {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"black\"\n          },\n          children: \"Login Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this);\n      }\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) {\n        errors.email = \"Field Required\";\n      }\n      if (!values.pswField) {\n        errors.password = \"Field Required\";\n      }\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        id: \"emailError\",\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), formik.errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        id: \"pswError\",\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"submitBtn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","success","setSuccess","setState","formik","initialValues","email","password","onSubmit","values","console","log","errors","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","validate","emailField","pswField","handleSubmit","name","type","onChange","handleChange","value","id","_c","$RefreshReg$"],"sources":["/Users/Regan/Downloads/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {useFormik} from \"formik\";\n// TODO: import useFormik from formik library\n\nfunction App() {\n\n  const [success, setSuccess] = React.setState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \" \",\n      password: \" \"\n    },\n    onSubmit: values => {\n      console.log(\"form:\", values);\n      if (formik.errors.email === \" \" && formik.errors.password === \" \") {\n        setSuccess(true);\n      }\n\n      if (success) {\n        <div style={{color:\"black\"}}>Login Successful</div>\n      }\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.emailField) {\n        errors.email = \"Field Required\";\n      }\n      if(!values.pswField) {\n        errors.password = \"Field Required\";\n      }\n      return errors;\n    }\n  })\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input name=\"emailField\" type=\"text\" onChange={formik.handleChange}\n        value={formik.values.emailField}/>\n        {formik.errors.email && <div style={{color:\"red\"}} id=\"emailError\">{formik.errors.email}</div> }\n        <div>Password</div>\n        <input name=\"pswField\" type=\"text\" onChange={formik.handleChange}\n        value={formik.values.pswField}/>\n        {formik.errors.password && <div style={{color:\"red\"}} id=\"pswError\">{formik.errors.password}</div> }\n        <button type=\"submit\" id=\"submitBtn\">Submit</button>\n   \n   </form>\n    </div>\n\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}